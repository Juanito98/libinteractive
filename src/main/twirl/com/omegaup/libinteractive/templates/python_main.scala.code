@import com.omegaup.libinteractive.idl.IDL
@import com.omegaup.libinteractive.idl.Interface
@import com.omegaup.libinteractive.target.Options
@import com.omegaup.libinteractive.target.Python
@(python: Python, options: Options, idl: IDL)
#!/usr/bin/python
# @python.message

import array
import struct
import sys
import time

def __readarray(infd, format, l):
	arr = array.array(format)
	arr.fromstring(infd.read(l))
	return arr

@if(options.transact) {
import transact

@for(interface <- idl.interfaces) {
@python_message_loop_transact(python, options, interface, idl.main,
		python.transactName(interface), idl.main.name)

@for(function <- interface.functions) {
@python_shim_transact(python, options, function, interface, idl.main,
		python.transactName(interface))
}
}

@for(interface <- idl.interfaces) {
@python.transactName(interface) = transact.Interface(True, "@interface.name",
		"@python.transactFilename(interface)", "@python.shmFilename(interface)",
		@interface.shmSize)
}
} else {
@for(interface <- idl.interfaces) {
@python_message_loop(python, options, interface, idl.main,
		python.pipeName(interface, true), python.pipeName(interface, false),
		idl.main.name)

@for(function <- interface.functions) {
@python_shim(python, options, function, interface, idl.main,
		python.pipeName(interface, true), python.pipeName(interface, false))
}
}

@for(interface <- idl.interfaces) {
@if(options.verbose) {
print>>sys.stderr, "\topening `@python.pipeFilename(interface, idl.main, true)'"
}
@python.pipeName(interface, true) = open("@python.pipeFilename(interface, idl.main, true)", 'wb')
@if(options.verbose) {
print>>sys.stderr, "\topening `@python.pipeFilename(interface, idl.main, false)'"
}
@python.pipeName(interface, false) = open("@python.pipeFilename(interface, idl.main, false)", 'rb')
}
}
import @idl.main.name
